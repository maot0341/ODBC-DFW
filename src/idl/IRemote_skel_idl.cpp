// **********************************************************************
//
// Generated by the ORBacus IDL-to-C++ Translator
//
// Copyright (c) 2004
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.2.2

#include <OB/CORBAServer.h>
#include <IRemote_skel_idl.h>

#ifndef OB_INTEGER_VERSION
#   error No ORBacus version defined! Is <OB/CORBA.h> included?
#endif

#ifndef OB_NO_VERSION_CHECK
#   if (OB_INTEGER_VERSION != 4020200L)
#       error ORBacus version mismatch!
#   endif
#endif

//
// IDL:go.psi.de/idl:1.0
//

//
// IDL:go.psi.de/idl/IHost/shutdown:1.0
//
void
POA_idl::IHost::_OB_op_shutdown(OB::Upcall_ptr _ob_up)
{
    ::CORBA::Boolean _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_boolean();
    _OB_postUnmarshal(_ob_up);
    shutdown(_ob_a0);
    _OB_postinvoke(_ob_up);
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IHost/login:1.0
//
void
POA_idl::IHost::_OB_op_login(OB::Upcall_ptr _ob_up)
{
    OB::StrForStruct _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_string();
    _OB_postUnmarshal(_ob_up);
    ::idl::IConnection_var _ob_r = login(_ob_a0);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    OBMarshal(_ob_r.in(), _ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IHost/ping:1.0
//
void
POA_idl::IHost::_OB_op_ping(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    ping();
    _OB_postinvoke(_ob_up);
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IHost/exec:1.0
//
void
POA_idl::IHost::_OB_op_exec(OB::Upcall_ptr _ob_up)
{
    OB::StrForStruct _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_string();
    _OB_postUnmarshal(_ob_up);
    exec(_ob_a0);
    _OB_postinvoke(_ob_up);
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IHost:1.0
//
::CORBA::Boolean
POA_idl::IHost::_is_a(const char* type)
    throw(::CORBA::SystemException)
{
    const char** _ob_ids = idl::IHost::_OB_staticIds();
    for(::CORBA::ULong _ob_i = 0 ; _ob_ids[_ob_i] != 0 ; _ob_i++)
        if(strcmp(type, _ob_ids[_ob_i]) == 0)
            return true;

    return false;
}

::CORBA::RepositoryId
POA_idl::IHost::_primary_interface(const PortableServer::ObjectId&,
                                   PortableServer::POA_ptr)
{
    return ::CORBA::string_dup(idl::IHost::_OB_staticIds()[0]);
}

idl::IHost_ptr
POA_idl::IHost::_this()
{
    ::CORBA::Object_var obj = _OB_createReference();
    idl::IHost_var result = idl::IHost::_narrow(obj);
    return result._retn();
}

OB::DirectStubImpl_ptr
POA_idl::IHost::_OB_createDirectStubImpl(PortableServer::POA_ptr poa,
                                         const PortableServer::ObjectId& oid)
{
    return new OBDirectStubImpl_idl::IHost(poa, oid, this);
}

void
POA_idl::IHost::_OB_dispatch(OB::Upcall_ptr _ob_up)
{
    static const char* _ob_names[] =
    {
        "exec",
        "login",
        "ping",
        "shutdown"
    };
    static const ::CORBA::ULong _ob_numNames = 4;

    switch(_OB_findOperation(_ob_up, _ob_names, _ob_numNames))
    {
    case 0: // exec
        _OB_op_exec(_ob_up);
        return;

    case 1: // login
        _OB_op_login(_ob_up);
        return;

    case 2: // ping
        _OB_op_ping(_ob_up);
        return;

    case 3: // shutdown
        _OB_op_shutdown(_ob_up);
        return;
    }

    _OB_dispatchBase(_ob_up);
}

//
// IDL:go.psi.de/idl/IConnection/SQLAllocStmt:1.0
//
void
POA_idl::IConnection::_OB_op_SQLAllocStmt(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    ::idl::IStmt_var _ob_r = SQLAllocStmt();
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    OBMarshal(_ob_r.in(), _ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IConnection/logout:1.0
//
void
POA_idl::IConnection::_OB_op_logout(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    logout();
    _OB_postinvoke(_ob_up);
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IConnection/ping:1.0
//
void
POA_idl::IConnection::_OB_op_ping(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    ping();
    _OB_postinvoke(_ob_up);
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IConnection:1.0
//
::CORBA::Boolean
POA_idl::IConnection::_is_a(const char* type)
    throw(::CORBA::SystemException)
{
    const char** _ob_ids = idl::IConnection::_OB_staticIds();
    for(::CORBA::ULong _ob_i = 0 ; _ob_ids[_ob_i] != 0 ; _ob_i++)
        if(strcmp(type, _ob_ids[_ob_i]) == 0)
            return true;

    return false;
}

::CORBA::RepositoryId
POA_idl::IConnection::_primary_interface(const PortableServer::ObjectId&,
                                         PortableServer::POA_ptr)
{
    return ::CORBA::string_dup(idl::IConnection::_OB_staticIds()[0]);
}

idl::IConnection_ptr
POA_idl::IConnection::_this()
{
    ::CORBA::Object_var obj = _OB_createReference();
    idl::IConnection_var result = idl::IConnection::_narrow(obj);
    return result._retn();
}

OB::DirectStubImpl_ptr
POA_idl::IConnection::_OB_createDirectStubImpl(PortableServer::POA_ptr poa,
                                               const PortableServer::ObjectId& oid)
{
    return new OBDirectStubImpl_idl::IConnection(poa, oid, this);
}

void
POA_idl::IConnection::_OB_dispatch(OB::Upcall_ptr _ob_up)
{
    static const char* _ob_names[] =
    {
        "SQLAllocStmt",
        "logout",
        "ping"
    };
    static const ::CORBA::ULong _ob_numNames = 3;

    switch(_OB_findOperation(_ob_up, _ob_names, _ob_numNames))
    {
    case 0: // SQLAllocStmt
        _OB_op_SQLAllocStmt(_ob_up);
        return;

    case 1: // logout
        _OB_op_logout(_ob_up);
        return;

    case 2: // ping
        _OB_op_ping(_ob_up);
        return;
    }

    _OB_dispatchBase(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/ping:1.0
//
void
POA_idl::IStmt::_OB_op_ping(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    ping();
    _OB_postinvoke(_ob_up);
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/exec:1.0
//
void
POA_idl::IStmt::_OB_op_exec(OB::Upcall_ptr _ob_up)
{
    OB::StrForStruct _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_string();
    _OB_postUnmarshal(_ob_up);
    exec(_ob_a0);
    _OB_postinvoke(_ob_up);
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/destroy:1.0
//
void
POA_idl::IStmt::_OB_op_destroy(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    destroy();
    _OB_postinvoke(_ob_up);
    _OB_preMarshal(_ob_up);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/desc:1.0
//
void
POA_idl::IStmt::_OB_op_desc(OB::Upcall_ptr _ob_up)
{
    ::idl::typHeader _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_a0.length(_ob_len0);
    ::idl::typDesc * _ob_buf0 = _ob_a0.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::idl::typDesc::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
    _OB_postUnmarshal(_ob_up);
    desc(_ob_a0);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    ::CORBA::ULong _ob_len1 = _ob_a0.length();
    _ob_out -> write_ulong(_ob_len1);
    ::idl::typDesc * _ob_buf1 = _ob_a0.get_buffer();
    for(::CORBA::ULong _ob_i1 = 0 ; _ob_i1 < _ob_len1 ; _ob_i1++)
    {
        _ob_buf1[_ob_i1]._OB_marshal(_ob_out);
    }
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLTables:1.0
//
void
POA_idl::IStmt::_OB_op_SQLTables(OB::Upcall_ptr _ob_up)
{
    OB::StrForStruct _ob_a0;
    OB::StrForStruct _ob_a1;
    OB::StrForStruct _ob_a2;
    OB::StrForStruct _ob_a3;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_string();
    _ob_a1 = _ob_in -> read_string();
    _ob_a2 = _ob_in -> read_string();
    _ob_a3 = _ob_in -> read_string();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLTables(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLColumns:1.0
//
void
POA_idl::IStmt::_OB_op_SQLColumns(OB::Upcall_ptr _ob_up)
{
    OB::StrForStruct _ob_a0;
    OB::StrForStruct _ob_a1;
    OB::StrForStruct _ob_a2;
    OB::StrForStruct _ob_a3;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_string();
    _ob_a1 = _ob_in -> read_string();
    _ob_a2 = _ob_in -> read_string();
    _ob_a3 = _ob_in -> read_string();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLColumns(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLSpecialColumns:1.0
//
void
POA_idl::IStmt::_OB_op_SQLSpecialColumns(OB::Upcall_ptr _ob_up)
{
    OB::StrForStruct _ob_a0;
    OB::StrForStruct _ob_a1;
    OB::StrForStruct _ob_a2;
    ::CORBA::Short _ob_a3;
    ::CORBA::Short _ob_a4;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_string();
    _ob_a1 = _ob_in -> read_string();
    _ob_a2 = _ob_in -> read_string();
    _ob_a3 = _ob_in -> read_short();
    _ob_a4 = _ob_in -> read_short();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLSpecialColumns(_ob_a0, _ob_a1, _ob_a2, _ob_a3, _ob_a4);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLStatistics:1.0
//
void
POA_idl::IStmt::_OB_op_SQLStatistics(OB::Upcall_ptr _ob_up)
{
    OB::StrForStruct _ob_a0;
    OB::StrForStruct _ob_a1;
    OB::StrForStruct _ob_a2;
    ::CORBA::Short _ob_a3;
    ::CORBA::Short _ob_a4;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_string();
    _ob_a1 = _ob_in -> read_string();
    _ob_a2 = _ob_in -> read_string();
    _ob_a3 = _ob_in -> read_short();
    _ob_a4 = _ob_in -> read_short();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLStatistics(_ob_a0, _ob_a1, _ob_a2, _ob_a3, _ob_a4);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLParams:1.0
//
void
POA_idl::IStmt::_OB_op_SQLParams(OB::Upcall_ptr _ob_up)
{
    ::idl::typParamset _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_a0.length(_ob_len0);
    ::idl::typParam * _ob_buf0 = _ob_a0.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::idl::typParam::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLParams(_ob_a0);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLPrepare:1.0
//
void
POA_idl::IStmt::_OB_op_SQLPrepare(OB::Upcall_ptr _ob_up)
{
    OB::StrForStruct _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_string();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLPrepare(_ob_a0);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLExecute:1.0
//
void
POA_idl::IStmt::_OB_op_SQLExecute(OB::Upcall_ptr _ob_up)
{
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLExecute();
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLNumResultCols:1.0
//
void
POA_idl::IStmt::_OB_op_SQLNumResultCols(OB::Upcall_ptr _ob_up)
{
    ::CORBA::Short _ob_a0;
    _OB_preUnmarshal(_ob_up);
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLNumResultCols(_ob_a0);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _ob_out -> write_short(_ob_a0);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLGetTypeInfo:1.0
//
void
POA_idl::IStmt::_OB_op_SQLGetTypeInfo(OB::Upcall_ptr _ob_up)
{
    ::CORBA::Short _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_short();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLGetTypeInfo(_ob_a0);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLFetch:1.0
//
void
POA_idl::IStmt::_OB_op_SQLFetch(OB::Upcall_ptr _ob_up)
{
    ::idl::ULONG _ob_a0;
    ::idl::ULONG _ob_a1;
    ::idl::typRecord_var _ob_a2;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_ulong();
    _ob_a1 = _ob_in -> read_ulong();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLFetch(_ob_a0, _ob_a1, _ob_a2.out());
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    ::CORBA::ULong _ob_len0 = _ob_a2.in().length();
    _ob_out -> write_ulong(_ob_len0);
    ::idl::typValue const * _ob_buf0 = _ob_a2.in().get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        _ob_buf0[_ob_i0]._OB_marshal(_ob_out);
    }
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLDescribeParams:1.0
//
void
POA_idl::IStmt::_OB_op_SQLDescribeParams(OB::Upcall_ptr _ob_up)
{
    ::idl::typParamset _ob_a0;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_a0.length(_ob_len0);
    ::idl::typParam * _ob_buf0 = _ob_a0.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::idl::typParam::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLDescribeParams(_ob_a0);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    ::CORBA::ULong _ob_len1 = _ob_a0.length();
    _ob_out -> write_ulong(_ob_len1);
    ::idl::typParam * _ob_buf1 = _ob_a0.get_buffer();
    for(::CORBA::ULong _ob_i1 = 0 ; _ob_i1 < _ob_len1 ; _ob_i1++)
    {
        _ob_buf1[_ob_i1]._OB_marshal(_ob_out);
    }
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLFetchRef:1.0
//
void
POA_idl::IStmt::_OB_op_SQLFetchRef(OB::Upcall_ptr _ob_up)
{
    ::idl::ULONG _ob_a0;
    ::idl::ULONG _ob_a1;
    ::idl::typRecord _ob_a2;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_ulong();
    _ob_a1 = _ob_in -> read_ulong();
    ::CORBA::ULong _ob_len0 = _ob_in -> read_ulong();
    _ob_a2.length(_ob_len0);
    ::idl::typValue * _ob_buf0 = _ob_a2.get_buffer();
    for(::CORBA::ULong _ob_i0 = 0 ; _ob_i0 < _ob_len0 ; _ob_i0++)
    {
        ::idl::typValue::_OB_unmarshal(_ob_buf0[_ob_i0], _ob_in);
    }
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLFetchRef(_ob_a0, _ob_a1, _ob_a2);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    ::CORBA::ULong _ob_len1 = _ob_a2.length();
    _ob_out -> write_ulong(_ob_len1);
    ::idl::typValue * _ob_buf1 = _ob_a2.get_buffer();
    for(::CORBA::ULong _ob_i1 = 0 ; _ob_i1 < _ob_len1 ; _ob_i1++)
    {
        _ob_buf1[_ob_i1]._OB_marshal(_ob_out);
    }
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLColAttribute:1.0
//
void
POA_idl::IStmt::_OB_op_SQLColAttribute(OB::Upcall_ptr _ob_up)
{
    ::CORBA::UShort _ob_a0;
    ::CORBA::UShort _ob_a1;
    ::idl::typValue_var _ob_a2;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_ushort();
    _ob_a1 = _ob_in -> read_ushort();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLColAttribute(_ob_a0, _ob_a1, _ob_a2.out());
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _ob_a2.in()._OB_marshal(_ob_out);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt/SQLDescribeCol:1.0
//
void
POA_idl::IStmt::_OB_op_SQLDescribeCol(OB::Upcall_ptr _ob_up)
{
    ::CORBA::UShort _ob_a0;
    ::CORBA::String_var _ob_a1;
    ::CORBA::Short _ob_a2;
    ::CORBA::ULong _ob_a3;
    ::CORBA::Short _ob_a4;
    ::CORBA::Short _ob_a5;
    OB::InputStreamImpl* _ob_in = _OB_preUnmarshal(_ob_up);
    _ob_a0 = _ob_in -> read_ushort();
    _OB_postUnmarshal(_ob_up);
    ::idl::RETN_var _ob_r = SQLDescribeCol(_ob_a0, _ob_a1.out(), _ob_a2, _ob_a3, _ob_a4, _ob_a5);
    _OB_postinvoke(_ob_up);
    OB::OutputStreamImpl* _ob_out = _OB_preMarshal(_ob_up);
    _ob_r.in()._OB_marshal(_ob_out);
    _ob_out -> write_string(_ob_a1.in());
    _ob_out -> write_short(_ob_a2);
    _ob_out -> write_ulong(_ob_a3);
    _ob_out -> write_short(_ob_a4);
    _ob_out -> write_short(_ob_a5);
    _OB_postMarshal(_ob_up);
}

//
// IDL:go.psi.de/idl/IStmt:1.0
//
::CORBA::Boolean
POA_idl::IStmt::_is_a(const char* type)
    throw(::CORBA::SystemException)
{
    const char** _ob_ids = idl::IStmt::_OB_staticIds();
    for(::CORBA::ULong _ob_i = 0 ; _ob_ids[_ob_i] != 0 ; _ob_i++)
        if(strcmp(type, _ob_ids[_ob_i]) == 0)
            return true;

    return false;
}

::CORBA::RepositoryId
POA_idl::IStmt::_primary_interface(const PortableServer::ObjectId&,
                                   PortableServer::POA_ptr)
{
    return ::CORBA::string_dup(idl::IStmt::_OB_staticIds()[0]);
}

idl::IStmt_ptr
POA_idl::IStmt::_this()
{
    ::CORBA::Object_var obj = _OB_createReference();
    idl::IStmt_var result = idl::IStmt::_narrow(obj);
    return result._retn();
}

OB::DirectStubImpl_ptr
POA_idl::IStmt::_OB_createDirectStubImpl(PortableServer::POA_ptr poa,
                                         const PortableServer::ObjectId& oid)
{
    return new OBDirectStubImpl_idl::IStmt(poa, oid, this);
}

void
POA_idl::IStmt::_OB_dispatch(OB::Upcall_ptr _ob_up)
{
    static const char* _ob_names[] =
    {
        "SQLColAttribute",
        "SQLColumns",
        "SQLDescribeCol",
        "SQLDescribeParams",
        "SQLExecute",
        "SQLFetch",
        "SQLFetchRef",
        "SQLGetTypeInfo",
        "SQLNumResultCols",
        "SQLParams",
        "SQLPrepare",
        "SQLSpecialColumns",
        "SQLStatistics",
        "SQLTables",
        "desc",
        "destroy",
        "exec",
        "ping"
    };
    static const ::CORBA::ULong _ob_numNames = 18;

    switch(_OB_findOperation(_ob_up, _ob_names, _ob_numNames))
    {
    case 0: // SQLColAttribute
        _OB_op_SQLColAttribute(_ob_up);
        return;

    case 1: // SQLColumns
        _OB_op_SQLColumns(_ob_up);
        return;

    case 2: // SQLDescribeCol
        _OB_op_SQLDescribeCol(_ob_up);
        return;

    case 3: // SQLDescribeParams
        _OB_op_SQLDescribeParams(_ob_up);
        return;

    case 4: // SQLExecute
        _OB_op_SQLExecute(_ob_up);
        return;

    case 5: // SQLFetch
        _OB_op_SQLFetch(_ob_up);
        return;

    case 6: // SQLFetchRef
        _OB_op_SQLFetchRef(_ob_up);
        return;

    case 7: // SQLGetTypeInfo
        _OB_op_SQLGetTypeInfo(_ob_up);
        return;

    case 8: // SQLNumResultCols
        _OB_op_SQLNumResultCols(_ob_up);
        return;

    case 9: // SQLParams
        _OB_op_SQLParams(_ob_up);
        return;

    case 10: // SQLPrepare
        _OB_op_SQLPrepare(_ob_up);
        return;

    case 11: // SQLSpecialColumns
        _OB_op_SQLSpecialColumns(_ob_up);
        return;

    case 12: // SQLStatistics
        _OB_op_SQLStatistics(_ob_up);
        return;

    case 13: // SQLTables
        _OB_op_SQLTables(_ob_up);
        return;

    case 14: // desc
        _OB_op_desc(_ob_up);
        return;

    case 15: // destroy
        _OB_op_destroy(_ob_up);
        return;

    case 16: // exec
        _OB_op_exec(_ob_up);
        return;

    case 17: // ping
        _OB_op_ping(_ob_up);
        return;
    }

    _OB_dispatchBase(_ob_up);
}

//
// IDL:go.psi.de/idl/IHost:1.0
//
OBDirectStubImpl_idl::IHost::IHost(PortableServer::POA_ptr poa,
                                   const PortableServer::ObjectId& oid,
                                   PortableServer::ServantBase* servant)
#ifdef HAVE_VCPLUSPLUS_BUGS
{
    _ob_initialize(poa, oid, servant);
}
#else
    : OB::DirectStubImpl(poa, oid, servant)
{
}
#endif

//
// IDL:go.psi.de/idl/IHost/shutdown:1.0
//
void
OBDirectStubImpl_idl::IHost::shutdown(::CORBA::Boolean _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "shutdown");
    dynamic_cast<POA_idl::IHost*>(_ob_servant_) -> shutdown(_ob_a0);
}

//
// IDL:go.psi.de/idl/IHost/login:1.0
//
::idl::IConnection_ptr
OBDirectStubImpl_idl::IHost::login(const char* _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "login");
    return dynamic_cast<POA_idl::IHost*>(_ob_servant_) -> login(_ob_a0);
}

//
// IDL:go.psi.de/idl/IHost/ping:1.0
//
void
OBDirectStubImpl_idl::IHost::ping()
{
    OB::InvocationHandler _ob_handler(this, "ping");
    dynamic_cast<POA_idl::IHost*>(_ob_servant_) -> ping();
}

//
// IDL:go.psi.de/idl/IHost/exec:1.0
//
void
OBDirectStubImpl_idl::IHost::exec(const char* _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "exec");
    dynamic_cast<POA_idl::IHost*>(_ob_servant_) -> exec(_ob_a0);
}

//
// IDL:go.psi.de/idl/IConnection:1.0
//
OBDirectStubImpl_idl::IConnection::IConnection(PortableServer::POA_ptr poa,
                                               const PortableServer::ObjectId& oid,
                                               PortableServer::ServantBase* servant)
#ifdef HAVE_VCPLUSPLUS_BUGS
{
    _ob_initialize(poa, oid, servant);
}
#else
    : OB::DirectStubImpl(poa, oid, servant)
{
}
#endif

//
// IDL:go.psi.de/idl/IConnection/SQLAllocStmt:1.0
//
::idl::IStmt_ptr
OBDirectStubImpl_idl::IConnection::SQLAllocStmt()
{
    OB::InvocationHandler _ob_handler(this, "SQLAllocStmt");
    return dynamic_cast<POA_idl::IConnection*>(_ob_servant_) -> SQLAllocStmt();
}

//
// IDL:go.psi.de/idl/IConnection/logout:1.0
//
void
OBDirectStubImpl_idl::IConnection::logout()
{
    OB::InvocationHandler _ob_handler(this, "logout");
    dynamic_cast<POA_idl::IConnection*>(_ob_servant_) -> logout();
}

//
// IDL:go.psi.de/idl/IConnection/ping:1.0
//
void
OBDirectStubImpl_idl::IConnection::ping()
{
    OB::InvocationHandler _ob_handler(this, "ping");
    dynamic_cast<POA_idl::IConnection*>(_ob_servant_) -> ping();
}

//
// IDL:go.psi.de/idl/IStmt:1.0
//
OBDirectStubImpl_idl::IStmt::IStmt(PortableServer::POA_ptr poa,
                                   const PortableServer::ObjectId& oid,
                                   PortableServer::ServantBase* servant)
#ifdef HAVE_VCPLUSPLUS_BUGS
{
    _ob_initialize(poa, oid, servant);
}
#else
    : OB::DirectStubImpl(poa, oid, servant)
{
}
#endif

//
// IDL:go.psi.de/idl/IStmt/ping:1.0
//
void
OBDirectStubImpl_idl::IStmt::ping()
{
    OB::InvocationHandler _ob_handler(this, "ping");
    dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> ping();
}

//
// IDL:go.psi.de/idl/IStmt/exec:1.0
//
void
OBDirectStubImpl_idl::IStmt::exec(const char* _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "exec");
    dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> exec(_ob_a0);
}

//
// IDL:go.psi.de/idl/IStmt/destroy:1.0
//
void
OBDirectStubImpl_idl::IStmt::destroy()
{
    OB::InvocationHandler _ob_handler(this, "destroy");
    dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> destroy();
}

//
// IDL:go.psi.de/idl/IStmt/desc:1.0
//
void
OBDirectStubImpl_idl::IStmt::desc(::idl::typHeader& _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "desc");
    dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> desc(_ob_a0);
}

//
// IDL:go.psi.de/idl/IStmt/SQLTables:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLTables(const char* _ob_a0,
                                       const char* _ob_a1,
                                       const char* _ob_a2,
                                       const char* _ob_a3)
{
    OB::InvocationHandler _ob_handler(this, "SQLTables");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLTables(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
}

//
// IDL:go.psi.de/idl/IStmt/SQLColumns:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLColumns(const char* _ob_a0,
                                        const char* _ob_a1,
                                        const char* _ob_a2,
                                        const char* _ob_a3)
{
    OB::InvocationHandler _ob_handler(this, "SQLColumns");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLColumns(_ob_a0, _ob_a1, _ob_a2, _ob_a3);
}

//
// IDL:go.psi.de/idl/IStmt/SQLSpecialColumns:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLSpecialColumns(const char* _ob_a0,
                                               const char* _ob_a1,
                                               const char* _ob_a2,
                                               ::CORBA::Short _ob_a3,
                                               ::CORBA::Short _ob_a4)
{
    OB::InvocationHandler _ob_handler(this, "SQLSpecialColumns");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLSpecialColumns(_ob_a0, _ob_a1, _ob_a2, _ob_a3, _ob_a4);
}

//
// IDL:go.psi.de/idl/IStmt/SQLStatistics:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLStatistics(const char* _ob_a0,
                                           const char* _ob_a1,
                                           const char* _ob_a2,
                                           ::CORBA::Short _ob_a3,
                                           ::CORBA::Short _ob_a4)
{
    OB::InvocationHandler _ob_handler(this, "SQLStatistics");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLStatistics(_ob_a0, _ob_a1, _ob_a2, _ob_a3, _ob_a4);
}

//
// IDL:go.psi.de/idl/IStmt/SQLParams:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLParams(const ::idl::typParamset& _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "SQLParams");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLParams(_ob_a0);
}

//
// IDL:go.psi.de/idl/IStmt/SQLPrepare:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLPrepare(const char* _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "SQLPrepare");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLPrepare(_ob_a0);
}

//
// IDL:go.psi.de/idl/IStmt/SQLExecute:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLExecute()
{
    OB::InvocationHandler _ob_handler(this, "SQLExecute");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLExecute();
}

//
// IDL:go.psi.de/idl/IStmt/SQLNumResultCols:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLNumResultCols(::CORBA::Short_out _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "SQLNumResultCols");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLNumResultCols(_ob_a0);
}

//
// IDL:go.psi.de/idl/IStmt/SQLGetTypeInfo:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLGetTypeInfo(::CORBA::Short _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "SQLGetTypeInfo");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLGetTypeInfo(_ob_a0);
}

//
// IDL:go.psi.de/idl/IStmt/SQLFetch:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLFetch(::idl::ULONG _ob_a0,
                                      ::idl::ULONG _ob_a1,
                                      ::idl::typRecord_out _ob_a2)
{
    OB::InvocationHandler _ob_handler(this, "SQLFetch");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLFetch(_ob_a0, _ob_a1, _ob_a2);
}

//
// IDL:go.psi.de/idl/IStmt/SQLDescribeParams:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLDescribeParams(::idl::typParamset& _ob_a0)
{
    OB::InvocationHandler _ob_handler(this, "SQLDescribeParams");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLDescribeParams(_ob_a0);
}

//
// IDL:go.psi.de/idl/IStmt/SQLFetchRef:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLFetchRef(::idl::ULONG _ob_a0,
                                         ::idl::ULONG _ob_a1,
                                         ::idl::typRecord& _ob_a2)
{
    OB::InvocationHandler _ob_handler(this, "SQLFetchRef");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLFetchRef(_ob_a0, _ob_a1, _ob_a2);
}

//
// IDL:go.psi.de/idl/IStmt/SQLColAttribute:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLColAttribute(::CORBA::UShort _ob_a0,
                                             ::CORBA::UShort _ob_a1,
                                             ::idl::typValue_out _ob_a2)
{
    OB::InvocationHandler _ob_handler(this, "SQLColAttribute");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLColAttribute(_ob_a0, _ob_a1, _ob_a2);
}

//
// IDL:go.psi.de/idl/IStmt/SQLDescribeCol:1.0
//
::idl::RETN*
OBDirectStubImpl_idl::IStmt::SQLDescribeCol(::CORBA::UShort _ob_a0,
                                            ::CORBA::String_out _ob_a1,
                                            ::CORBA::Short_out _ob_a2,
                                            ::CORBA::ULong_out _ob_a3,
                                            ::CORBA::Short_out _ob_a4,
                                            ::CORBA::Short_out _ob_a5)
{
    OB::InvocationHandler _ob_handler(this, "SQLDescribeCol");
    return dynamic_cast<POA_idl::IStmt*>(_ob_servant_) -> SQLDescribeCol(_ob_a0, _ob_a1, _ob_a2, _ob_a3, _ob_a4, _ob_a5);
}
